<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.spring_mybatis.dao.JRoleModelInfoMapper">
  <resultMap id="BaseResultMap" type="com.example.spring_mybatis.model.JRoleModelInfo">
    <id column="role_id" jdbcType="INTEGER" property="roleId" />
    <result column="model_id" jdbcType="INTEGER" property="modelId" />
    <result column="authorization" jdbcType="CHAR" property="authorization" />
  </resultMap>
  <sql id="Base_Column_List">
    role_id, model_id, authorization
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from j_role_model_info
    where role_id = #{roleId,jdbcType=INTEGER}
  </select>

  <insert id="insert" parameterType="com.example.spring_mybatis.model.JRoleModelInfo">
    insert into j_role_model_info (role_id, model_id, authorization
      )
    values (#{roleId,jdbcType=INTEGER}, #{modelId,jdbcType=INTEGER}, #{authorization,jdbcType=CHAR}
      )
  </insert>
  <update id="updateAuthorizationByGroupId"
		parameterType="com.example.spring_mybatis.model.JGroupModelInfo">
		update j_group_model_info set authorization =
		#{authorization,jdbcType=CHAR}
		where group_id
		=#{groupId,jdbcType=INTEGER} and model_id =
		#{modelId,jdbcType=INTEGER};

	</update>
	<update id="insertModle"
		parameterType="com.example.spring_mybatis.model.JGroupModelInfo">
		insert into j_group_model_info (group_id, model_id,
		authorization
		)
		values (#{groupId,jdbcType=INTEGER},
		#{modelId,jdbcType=INTEGER},
		#{authorization,jdbcType=CHAR}
		);

	</update>
	<delete id="deleteByPrimaryKey"
		parameterType="java.lang.Integer">
		delete from
		j_group_model_info
		where group_id =
		#{groupId,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByModelId"
		parameterType="java.lang.Integer">
		delete from
		j_group_model_info
		where model_id =
		#{modelId,jdbcType=INTEGER}
	</delete>
	<select id="selectGroupModelInfoAll" resultMap="BaseResultMap">
		select
		group_Id,model_id,authorization
		from manage_system.j_group_model_info;
	</select>
	<select id="selectModelInfoAll" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select a.parent_id,b.model_id,a.model_name,b.authorization from
		manage_system.model_info a left join manage_system.j_group_model_info
		b on a.model_id = b.model_id left join manage_system.group_info c on
		b.group_id = c.group_id
	</select>
	<select id="selectModelInfo" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select b.model_id,a.model_name,b.authorization from
		manage_system.model_info a left join manage_system.j_group_model_info
		b on a.model_id = b.model_id left join manage_system.group_info c on
		b.group_id = c.group_id
		where c.group_id = #{groupId,jdbcType=INTEGER}
	</select>
	<select id="selectModelId" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select model_id from j_group_model_info where group_id =
		#{groupId,jdbcType=INTEGER};
	</select>
  
  <insert id="insertSelective" parameterType="com.example.spring_mybatis.model.JRoleModelInfo">
    insert into j_role_model_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        role_id,
      </if>
      <if test="modelId != null">
        model_id,
      </if>
      <if test="authorization != null">
        authorization,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="modelId != null">
        #{modelId,jdbcType=INTEGER},
      </if>
      <if test="authorization != null">
        #{authorization,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.spring_mybatis.model.JRoleModelInfo">
    update j_role_model_info
    <set>
      <if test="modelId != null">
        model_id = #{modelId,jdbcType=INTEGER},
      </if>
      <if test="authorization != null">
        authorization = #{authorization,jdbcType=CHAR},
      </if>
    </set>
    where role_id = #{roleId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.spring_mybatis.model.JRoleModelInfo">
    update j_role_model_info
    set model_id = #{modelId,jdbcType=INTEGER},
      authorization = #{authorization,jdbcType=CHAR}
    where role_id = #{roleId,jdbcType=INTEGER}
  </update>
</mapper>